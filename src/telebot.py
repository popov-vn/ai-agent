# 7628129143:AAG1tbcssdQb6hwGDSrvvZyCwsSbUTyqsU8

import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters

# run agent
from agent3 import run_neuro_gift
import os

from dotenv import load_dotenv

# —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª .env

load_dotenv()
#print ("TELEGRAM_BOT_TOKEN")
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")


if None != TOKEN:
    print("Telegram token provided")
else:
    print("Telegram Token missed")


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context):
    await update.message.reply_text("""
üéÅ –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç —Å–µ—Ä–≤–∏—Å–∞ ‚Äú–ó–Ω–∞—é, —á—Ç–æ —Ç—ã –ª—é–±–∏—à—å‚Äù
–ü–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ ‚Äî –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ, —Å –∑–∞–±–æ—Ç–æ–π –∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–æ–≥–æ, —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è.

–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ —á–µ–ª–æ–≤–µ–∫–µ, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å —Å—é—Ä–ø—Ä–∏–∑, –æ –µ–≥–æ –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ —É–≤–ª–µ—á–µ–Ω–∏—è—Ö. –° –º–µ–Ω—è - –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ.                                    
"""
)
    
# –ö—Ä–∞—Å–∏–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
def string_results(final_selection):
    result = ""
    for gift in final_selection:
        result += f"üéÅ –ú–ï–°–¢–û #{gift['–º–µ—Å—Ç–æ']}: {gift['–ø–æ–¥–∞—Ä–æ–∫']}\n"
        result += f"   –û–ø–∏—Å–∞–Ω–∏–µ: {gift['–æ–ø–∏—Å–∞–Ω–∏–µ']}\n"
        result += f"   –°—Ç–æ–∏–º–æ—Å—Ç—å: {gift['—Å—Ç–æ–∏–º–æ—Å—Ç—å']}‚ÇΩ\n"
        result += f"   –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {gift['—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å']}/10\n"
        try:
            result += f"   –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –æ—Ç –ò–ò-–∞–≥–µ–Ω—Ç–æ–≤: {gift['—Å—Ä–µ–¥–Ω–∏–π_–±–∞–ª–ª']:.2f}\n"
            result += f"   –í—ã–±—Ä–∞–Ω –∞–≥–µ–Ω—Ç–∞–º–∏: {', '.join(gift['–≤—ã–±—Ä–∞–Ω_–∞–≥–µ–Ω—Ç–∞–º–∏'])}\n"
        except:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–∞–Ω–Ω—ã—Ö
            result += "   –í—ã–±—Ä–∞–Ω –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∞–≥–µ–Ω—Ç–∞–º–∏\n"
        result += "\n"
    
    return result

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–∞—à–∏–º —Å–∫—Ä–∏–ø—Ç–æ–º)
async def handle_message(update: Update, context):
    # –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(f"–í—ã–∑–æ–≤ –ø—Ä–∏–Ω—è—Ç, —Å–∫–æ—Ä–æ –≤–µ—Ä–Ω—É—Å—å —Å –æ—Ç–≤–µ—Ç–æ–º")
    
    user_input = update.message.text
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –≤–∞—à–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
    result = run_neuro_gift(user_input)
    str_results = string_results(result)
    await update.message.reply_text(f"{str_results}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    application = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()